name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Extraction du nom de version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Lecture du CHANGELOG
        id: changelog
        run: |
          # Extraire la section de la version actuelle du CHANGELOG
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          awk "/## \[${VERSION#v}\]/,/## \[/{if(/## \[${VERSION#v}\]/)f=1;else if(/## \[/)f=0;if(f)print}" CHANGELOG.md > release_notes.md || echo "Version $VERSION" > release_notes.md

      - name: CrÃ©ation de la release GitHub
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docker:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    needs: release

    strategy:
      matrix:
        service: [backend, frontend]

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Configuration de Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login au GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extraction de la version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Conversion du nom du repo en minuscules
        id: repo
        run: echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build et Push de l'image Docker ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.repo.outputs.REPO_LOWER }}/${{ matrix.service }}:${{ steps.version.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ steps.repo.outputs.REPO_LOWER }}/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
