# Dockerfile de production - Image unique avec backend + frontend + PostgreSQL
# Pour déploiement Render gratuit (1 seul service)

FROM python:3.11-slim-bookworm

# === ÉTAPE 1 : Installation des dépendances système ===
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    gnupg \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# === ÉTAPE 2 : Ajouter le dépôt PostgreSQL officiel ===
RUN echo "deb http://apt.postgresql.org/pub/repos/apt bookworm-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
    && wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/pgdg.gpg

# === ÉTAPE 3 : Installer PostgreSQL 15 + Node.js ===
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-15 \
    postgresql-client-15 \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# === ÉTAPE 4 : Configuration PostgreSQL ===
ENV PGDATA=/var/lib/postgresql/data \
    POSTGRES_USER=devops_user \
    POSTGRES_PASSWORD=devops_password \
    POSTGRES_DB=devops_db

# Créer les répertoires nécessaires
RUN mkdir -p /var/lib/postgresql/data /app/backend /app/frontend \
    && chown -R postgres:postgres /var/lib/postgresql

# Initialiser PostgreSQL (en tant que postgres user)
USER postgres
RUN /usr/lib/postgresql/15/bin/initdb -D /var/lib/postgresql/data
USER root

# === ÉTAPE 5 : Installation Backend (Python/FastAPI) ===
WORKDIR /app/backend
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY backend/ .

# === ÉTAPE 6 : Installation Frontend (Node.js/Express) ===
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm install --production
COPY frontend/ .

# === ÉTAPE 7 : Scripts et données ===
WORKDIR /app
COPY docker/start-all.sh /app/start-all.sh
COPY db/init.sql /app/init.sql
RUN chmod +x /app/start-all.sh

# === ÉTAPE 8 : Configuration finale ===
# Exposer le port 8080 (frontend - port principal pour Render)
EXPOSE 8080

# Variables d'environnement par défaut
ENV PORT=8080 \
    BACKEND_PORT=8000 \
    DATABASE_URL=postgresql://devops_user:devops_password@localhost:5432/devops_db \
    ENVIRONMENT=production

# === ÉTAPE 9 : Commande de démarrage ===
CMD ["/app/start-all.sh"]
